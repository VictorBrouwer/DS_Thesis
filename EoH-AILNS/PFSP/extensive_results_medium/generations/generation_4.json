{
  "generation": 4,
  "timestamp": "2025-06-14 12:31:41",
  "problem_file": "data/j50_m20/j50_m20_01.txt",
  "best_known_value": 3875,
  "population_size": 5,
  "population": [
    {
      "algorithm": "Initial PFSP repair operator generated from scratch",
      "code": "def llm_repair(state: Solution, rng, **kwargs) -> Solution:\n    \"\"\"\n    Repair operator for the Permutation Flow Shop Problem (PFSP) using ALNS.\n\n    Args:\n        state: The current solution.\n        rng: The random number generator.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        The repaired solution.\n    \"\"\"\n    # Insert unassigned jobs back into the solution using optimal insertion.\n    rng.shuffle(state.unassigned)  # Shuffle unassigned jobs for some randomness\n    for job in state.unassigned:\n        state.opt_insert(job)  # Insert each job at its best location\n    state.unassigned = []  # Clear the unassigned list\n\n    return state",
      "objective": 7659,
      "gap": null,
      "runtime": 60.002727031707764,
      "timestamp": "2025-06-14 12:09:53",
      "feasible": true,
      "training_instances": [
        "training_data/j50_m20/j50_m20_1.txt",
        "training_data/j50_m20/j50_m20_2.txt"
      ],
      "training_evaluation": {
        "total_objective": 7659,
        "average_objective": 3829.5,
        "total_runtime": 60.002727031707764,
        "average_runtime": 30.001363515853882,
        "instance_results": [
          {
            "objective": 3890,
            "runtime": 30.00204610824585,
            "data_file": "training_data/j50_m20/j50_m20_1.txt",
            "iterations": 0
          },
          {
            "objective": 3769,
            "runtime": 30.000680923461914,
            "data_file": "training_data/j50_m20/j50_m20_2.txt",
            "iterations": 0
          }
        ],
        "n_instances": 2
      }
    },
    {
      "algorithm": "Hybrid algorithm combining ideas from parent operators",
      "code": "def llm_repair(state: Solution, rng, **kwargs) -> Solution:\n    \"\"\"\n    Repair operator for the Permutation Flow Shop Problem (PFSP) using ALNS.\n\n    Args:\n        state: The current solution.\n        rng: The random number generator.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        The repaired solution.\n    \"\"\"\n    rng.shuffle(state.unassigned)\n    for job in state.unassigned:\n        state.opt_insert(job)\n    state.unassigned = []\n    return state",
      "objective": 7659,
      "gap": null,
      "runtime": 60.00783085823059,
      "timestamp": "2025-06-14 12:20:17",
      "feasible": true,
      "training_instances": [
        "training_data/j50_m20/j50_m20_1.txt",
        "training_data/j50_m20/j50_m20_2.txt"
      ],
      "training_evaluation": {
        "total_objective": 7659,
        "average_objective": 3829.5,
        "total_runtime": 60.00783085823059,
        "average_runtime": 30.003915429115295,
        "instance_results": [
          {
            "objective": 3890,
            "runtime": 30.0057430267334,
            "data_file": "training_data/j50_m20/j50_m20_1.txt",
            "iterations": 0
          },
          {
            "objective": 3769,
            "runtime": 30.002087831497192,
            "data_file": "training_data/j50_m20/j50_m20_2.txt",
            "iterations": 0
          }
        ],
        "n_instances": 2
      },
      "strategy": "e2",
      "generation": 2
    },
    {
      "algorithm": "Hybrid algorithm combining ideas from parent operators",
      "code": "def llm_repair(state: Solution, rng, **kwargs) -> Solution:\n    \"\"\"\n    Repair operator for the Permutation Flow Shop Problem (PFSP) using ALNS.\n\n    Args:\n        state: The current solution.\n        rng: The random number generator.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        The repaired solution.\n    \"\"\"\n    rng.shuffle(state.unassigned)  # Shuffle unassigned jobs for some randomness\n    for job in state.unassigned:\n        state.opt_insert(job)  # Insert each job at its best location\n    state.unassigned = []  # Clear the unassigned list\n\n    return state",
      "objective": 7659,
      "gap": null,
      "runtime": 60.00918507575989,
      "timestamp": "2025-06-14 12:24:27",
      "feasible": true,
      "training_instances": [
        "training_data/j50_m20/j50_m20_1.txt",
        "training_data/j50_m20/j50_m20_2.txt"
      ],
      "training_evaluation": {
        "total_objective": 7659,
        "average_objective": 3829.5,
        "total_runtime": 60.00918507575989,
        "average_runtime": 30.004592537879944,
        "instance_results": [
          {
            "objective": 3890,
            "runtime": 30.004376888275146,
            "data_file": "training_data/j50_m20/j50_m20_1.txt",
            "iterations": 0
          },
          {
            "objective": 3769,
            "runtime": 30.00480818748474,
            "data_file": "training_data/j50_m20/j50_m20_2.txt",
            "iterations": 0
          }
        ],
        "n_instances": 2
      },
      "strategy": "e2",
      "generation": 3
    },
    {
      "algorithm": "Simplified version of: Initial PFSP repair operator generated from scratch",
      "code": "def llm_repair(state: Solution, rng, **kwargs) -> Solution:\n    \"\"\"\n    Repair operator for the Permutation Flow Shop Problem (PFSP) using ALNS.\n\n    Args:\n        state: The current solution.\n        rng: The random number generator.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        The repaired solution.\n    \"\"\"\n    # Simple repair: Re-insert unassigned jobs randomly and then optimize.\n    rng.shuffle(state.unassigned)\n    for job in state.unassigned:\n        state.opt_insert(job)\n    state.unassigned = []\n\n    return state",
      "objective": 7659,
      "gap": null,
      "runtime": 60.004663705825806,
      "timestamp": "2025-06-14 12:26:32",
      "feasible": true,
      "training_instances": [
        "training_data/j50_m20/j50_m20_1.txt",
        "training_data/j50_m20/j50_m20_2.txt"
      ],
      "training_evaluation": {
        "total_objective": 7659,
        "average_objective": 3829.5,
        "total_runtime": 60.004663705825806,
        "average_runtime": 30.002331852912903,
        "instance_results": [
          {
            "objective": 3890,
            "runtime": 30.003630876541138,
            "data_file": "training_data/j50_m20/j50_m20_1.txt",
            "iterations": 0
          },
          {
            "objective": 3769,
            "runtime": 30.001032829284668,
            "data_file": "training_data/j50_m20/j50_m20_2.txt",
            "iterations": 0
          }
        ],
        "n_instances": 2
      },
      "strategy": "m3",
      "generation": 3
    },
    {
      "algorithm": "Hybrid algorithm combining ideas from parent operators",
      "code": "def llm_repair(state: Solution, rng, **kwargs) -> Solution:\n    \"\"\"\n    Repair operator for the Permutation Flow Shop Problem (PFSP) using ALNS.\n\n    Args:\n        state: The current solution.\n        rng: The random number generator.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        The repaired solution.\n    \"\"\"\n    rng.shuffle(state.unassigned)\n    for job in state.unassigned:\n        state.opt_insert(job)\n    state.unassigned = []\n    return state",
      "objective": 7659,
      "gap": null,
      "runtime": 60.00588297843933,
      "timestamp": "2025-06-14 12:28:37",
      "feasible": true,
      "training_instances": [
        "training_data/j50_m20/j50_m20_1.txt",
        "training_data/j50_m20/j50_m20_2.txt"
      ],
      "training_evaluation": {
        "total_objective": 7659,
        "average_objective": 3829.5,
        "total_runtime": 60.00588297843933,
        "average_runtime": 30.002941489219666,
        "instance_results": [
          {
            "objective": 3890,
            "runtime": 30.00207805633545,
            "data_file": "training_data/j50_m20/j50_m20_1.txt",
            "iterations": 0
          },
          {
            "objective": 3769,
            "runtime": 30.003804922103882,
            "data_file": "training_data/j50_m20/j50_m20_2.txt",
            "iterations": 0
          }
        ],
        "n_instances": 2
      },
      "strategy": "e2",
      "generation": 4
    }
  ]
}